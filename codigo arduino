#include <Servo.h>

// Pines de conexión
const int pinLEDs = 6;      // Triángulo
const int pinBomba = 5;     // Círculo
const int pinServo = 9;     // Cuadrado

// Variables
Servo miServo;
bool estadoLEDs = false;
bool estadoBomba = false;
int posServo = 0;

void setup() {
  Serial.begin(9600);
  
  // Configurar pines
  pinMode(pinLEDs, OUTPUT);
  pinMode(pinBomba, OUTPUT);
  miServo.attach(pinServo);
  
  // Inicializar en estado apagado
  apagarTodo();
}

void loop() {
  if (Serial.available() > 0) {
    char comando = Serial.read();
    
    switch(comando) {
      case 'L':  // Triángulo - LEDs
        controlarLEDs();
        break;
        
      case 'B':  // Círculo - Bomba
        controlarBomba();
        break;
        
      case 'S':  // Cuadrado - Servo
        controlarServo();
        break;
        
      case 'A':  // Apagar todo
        apagarTodo();
        break;
    }
  }
}

// Función para controlar LEDs (Triángulo)
void controlarLEDs() {
  digitalWrite(pinLEDs, HIGH);  // Encender
  delay(5000);                  // Mantener 5 segundos
  digitalWrite(pinLEDs, LOW);   // Apagar
}

// Función para controlar bomba (Círculo)
void controlarBomba() {
  digitalWrite(pinBomba, HIGH); // Activar bomba
  delay(2000);                  // Encendida por 2 segundos
  digitalWrite(pinBomba, LOW);  // Desactivar
}

// Función para controlar servo (Cuadrado)
void controlarServo() {
  for (posServo = 0; posServo <= 180; posServo += 1) {
    miServo.write(posServo);
    delay(15);
  }
  for (posServo = 180; posServo >= 0; posServo -= 1) {
    miServo.write(posServo);
    delay(15);
  }
}

// Función para apagar todos los componentes
void apagarTodo() {
  digitalWrite(pinLEDs, LOW);
  digitalWrite(pinBomba, LOW);
  miServo.write(0);  // Posición inicial del servo
}
